# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# https://pypi.org/project/pytest-azurepipelines/

trigger:
- main

pool:
  vmImage: ubuntu-latest
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'


- task: UsePythonVersion@0
  displayName: 'Use Python 3.x'

- script: |
    python -m pip install --upgrade pip
    pip install pytest pytest-azurepipelines
    pip install -e .
    pip install pandas
  displayName: 'Install dependencies'

- script: |    
    pytest tests/ --junitxml=junit/test-results.xml --test-run-title="Windows Test with junitxml"
  displayName: 'pytest with junitxml flag'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  displayName: 'Publishing test reports'
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'
    failTaskOnFailedTests: true

- task: CopyFiles@2
  displayName: 'Copy notebooks to generate build artifacts'
  inputs:
    SourceFolder: 'Notebooks'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\DeployableNotebooks'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: DeployableNotebooks'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\DeployableNotebooks'